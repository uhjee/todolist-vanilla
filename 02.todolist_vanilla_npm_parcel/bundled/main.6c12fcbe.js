var e=(()=>{let e="",t="green";return{setSelectedMarkColor:e=>{(e=>{e&&(t=e)})(e)},getSelectedMarkColor:()=>t,setTodoText:t=>{(t=>{e=t})(t)},getTodoText:()=>e}})(),t={makeTodoItem:t=>(t=>{const n=document.createDocumentFragment(),o=document.createElement("div");return n.appendChild(o),n.querySelector("div").innerHTML=`\n      <li class="todo--body__item">\n          <div class="mark mark--${e.getSelectedMarkColor()}"></div>\n          <div class="content">${t}</div>\n      </li>`,n.cloneNode(!0).querySelector("div").firstElementChild})(t),makeBtnBoxForTodoItem:()=>(()=>{const e=document.createDocumentFragment(),t=document.createElement("div");return e.appendChild(t),e.querySelector("div").innerHTML='\n      <div class="btn-box">\n        <a href="javascript:void(0)" class="circle-btn circle-btn--edit" data-action="edit">\n          <div class="material-icons">edit</div>\n        </a>\n        <a href="javascript:void(0)" class="circle-btn circle-btn--delete" data-action="delete">\n          <div class="material-icons">delete_forever</div>\n        </a>\n      </div>',e.cloneNode(!0).querySelector("div").firstElementChild})(),makeMark:()=>`\n    <div class="mark mark--${e.getSelectedMarkColor()}"></div>\n    `,makeEditingTodoItem:(e,t)=>((e,t)=>{const n=document.createDocumentFragment(),o=document.createElement("div");return n.appendChild(o),n.querySelector("div").innerHTML=`\n      <li class="todo--body__item editing">\n        <div class="mark mark--${t}"></div>\n        <input class="input-editing" type="text" />\n        <div class="btn-box btn-box--editing">\n          <a href="javascript:void(0)" class="circle-btn circle-btn--check" data-action="check">\n            <div class="material-icons">done</div>\n          </a>\n          <a href="javascript:void(0)" class="circle-btn circle-btn--cancel" data-action="cancel">\n            <div class="material-icons">clear</div>\n          </a>\n        </div>\n      </li>\n    `,n.querySelector("input.input-editing").value=e,n.cloneNode(!0).querySelector("div").firstElementChild})(e,t)};let n="";const o={addTodo:()=>{const e=document.querySelector("#input-todo");if(!e.value||e.value.replaceAll(" ","").length<1)return alert("내용을 입력해주세요."),e.value="",void e.focus();document.querySelector(".todo--body").appendChild(t.makeTodoItem(e.value)),e.value=""},showItemBtnBox:(e,n)=>{if([...e.target.classList].includes("todo--body")||e.target.closest(".btn-box")||e.target.closest(".todo--body__item.editing"))return;const o=e.target.closest(".todo--body__item");o&&![...o.classList].includes("focused")&&n.contains(o)&&(o.addEventListener("mouseleave",(()=>{o.querySelector(".btn-box")&&(o.classList.remove("focused"),o.querySelector(".btn-box").remove())})),o.classList.add("focused"),o.appendChild(t.makeBtnBoxForTodoItem()))},selectColorMark:n=>{if(![...n.target.classList].includes("selectable"))return;const o=n.target,d=o.closest(".select-color-box"),r=document.querySelector(".todo--footer .select-color-btn");"close"!==o.dataset.action&&(e.setSelectedMarkColor(o.dataset.color),r.innerHTML=t.makeMark()),d.classList.remove("show")},doBtnBoxAction:e=>{const d=e.target.closest(".circle-btn");if(d){const r=d.dataset.action;let c=e.target.closest(".todo--body > .todo--body__item");switch(r){case"edit":o.addClass(c,"editing"),c.querySelector(".btn-box")&&(c.classList.remove("focused"),c.querySelector(".btn-box").remove());const e=c.querySelector(".content").innerText,d=[...c.querySelector(".mark").classList].find((e=>e.indexOf("--")>0)).split("--")[1];n=e;const r=t.makeEditingTodoItem(e,d);return void c.parentNode.replaceChild(r,c);case"delete":return void(confirm("지우시겠어요?")&&(console.log(c),c.remove()));case"check":const l=c.querySelector("input.input-editing").value,a=t.makeTodoItem(l);return c.parentNode.replaceChild(a,c),void(n="");case"cancel":const i=t.makeTodoItem(n);return c.parentNode.replaceChild(i,c),void(n="");default:throw new Error("check  attribute of element dataset.action")}}},addClass:(e,t)=>{e?.classList?.add?.(t)},removeClass:(e,t)=>{e?.classList?.remove?.(t)},delAllEle:function(){var e=document.getElementById("listBody"),t=e.children,n=t.length;if(0!=t.length)for(var o=0;o<n;o++){var d=document.createElement("tr"),r=document.createElement("input");r.setAttribute("type","checkbox"),r.setAttribute("class","done-btn-chk");var c=document.createElement("td");c.appendChild(r),d.appendChild(c);var l=document.createElement("td");l.innerHTML=t[0].innerText,d.appendChild(l),document.getElementById("done-listBody").appendChild(d),e.removeChild(t[0])}else alert("완료할 목록이 없습니다.")},delLastEle:function(){var e=document.getElementById("listBody"),t=document.querySelectorAll("#listBody > tr"),n=t.length-1;if(0==t.length)return alert("완료할 항목이 없습니다."),!1;var o=document.createElement("tr"),d=document.createElement("input");d.setAttribute("type","checkbox"),d.setAttribute("class","done-btn-chk");var r=document.createElement("td");r.appendChild(d),o.appendChild(r);var c=document.createElement("td");c.innerHTML=t[n].children[1].innerText,o.appendChild(c),document.getElementById("done-listBody").appendChild(o),e.removeChild(t[n])},delSelected:function(){var e=document.getElementById("listBody"),t=document.querySelectorAll("#listBody .btn-chk");if(0!=t.length){for(var n=0;n<t.length;n++)if(1==t[n].nodeType&&1==t[n].checked){var o=document.createElement("tr"),d=document.createElement("input");d.setAttribute("type","checkbox"),d.setAttribute("class","done-btn-chk");var r=document.createElement("td");r.appendChild(d),o.appendChild(r);var c=document.createElement("td");c.innerHTML=t[n].parentNode.parentNode.children[1].innerText,o.appendChild(c),document.getElementById("done-listBody").appendChild(o),e.removeChild(t[n].parentNode.parentNode)}}else alert("완료할 항목이 없습니다.")}},d=new Date;document.querySelector("#add-btn").addEventListener("click",o.addTodo);const r=document.querySelector(".right .search"),c=document.querySelector(".right .search input");r.addEventListener("click",(()=>{c.focus()})),c.addEventListener("focus",(()=>{r.classList.add("focused"),c.setAttribute("placeholder","Search your memory!")})),c.addEventListener("blur",(()=>{r.classList.remove("focused"),c.removeAttribute("placeholder")}));const l=document.querySelector("#input-todo");l.addEventListener("focus",o.addClass(l,"focused")),l.addEventListener("blur",o.removeClass(l,"focused"));document.querySelector(".this-year").textContent=`${d.getFullYear()}. ${d.getMonth()+1}. ${d.getDate()} (${(e=>{switch(e){case 0:return"Sun";case 1:return"Mon";case 2:return"Tue";case 3:return"Wen";case 4:return"Thu";case 5:return"Fri";case 6:return"Sat";default:throw new Error("Not exist the day!")}})(d.getDay())})`;const a=document.querySelector(".todo--body");a.addEventListener("mouseover",(e=>o.showItemBtnBox(e,a))),a.addEventListener("click",o.doBtnBoxAction);const i=document.querySelector(".todo--footer .select-color-btn"),s=document.querySelector(".select-color-box");i.addEventListener("click",(()=>{s.classList.add("show")})),s.addEventListener("click",o.selectColorMark);
//# sourceMappingURL=main.6c12fcbe.js.map
